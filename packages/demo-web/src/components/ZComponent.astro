---
const { title, description, args } = Astro.props;
---

<article>
  <script>
    import '@zephyra-ui/z-button';
    import '@zephyra-ui/z-toggle-theme';
  </script>

  <section>
    <h3
      id={title}
      class='title'
    >
      {title}
    </h3>
    <p>{description}</p>
  </section>

  <section>
    <h3>How to install</h3>
    <code>npm install @zephyra-ui/{title}</code>
  </section>

  <section>
    <h3>How to use</h3>

    <code>
      &nbsp;&lt;script&gt;import '@zephyra-ui/{title}'&lt;/script&gt;&nbsp;
      <br />
      &nbsp;&lt;{title}&gt;&lt;/{title}&gt;&nbsp;
    </code>
  </section>

  <section>

    {args.props.length > 0 &&  (
      <h2>Properties</h2>
      <table>
      <thead>
        <tr>
          <th>Prop name</th>
          <th>Type</th>
          <th>Example</th>
          <th>Result</th>
        </tr>
      </thead>
      <tbody>
          {
            args.props.map(
              ({
                propName,
                propType,
                propValue
              }: {
                propName: string;
                propType: string;
                propValue: string;
              }) => (
                <tr>
                  <td>
                    <code>{propName}</code>
                  </td>
                  <td>{propType}</td>
                  <td>
                    <code>&nbsp;&lt;{title}{propName && ' '+ propName}{propValue}&gt;&lt;/{title}&gt;&nbsp; </code>
                  </td>
                  <td><{title} {propName}{propValue.replace('"','').replace('"','')}></td>
                </tr>
              )
            )
          }
      </tbody>
    </table>
    )}

    

    {args.events.length > 0 && (
    <h2>Events</h2>
    <table>
      <thead>
        <tr>
          <th>Event name</th>
          <th>Dispach</th>
          <th>Payload</th>
        </tr>
      </thead>
      <tbody>
          {
            args.events.map(
              ({
                eventName,
                eventDispach,
                eventPayload
              }: {
                eventName: string;
                eventDispach: string;
                eventPayload: string;
              }) => (
                <tr>
                  <td>
                    <code>{eventName}</code>
                  </td>
                  <td>{eventDispach}</td>
                  <td>
                    <code>
                    {eventPayload}
                    </code>
                  </td>
                </tr>
              )
            )
          }
      </tbody>
    </table>
  )}

    
  </section>

  <section>

  </section>
</article>

<style>
  article {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: 100%;
  }
  
  .title{
    padding-top: 80px;
  }

  code {
    background-color: var(--code-bg-color);
    padding: 5px;
    border-radius: 5px;
    width: 100%;
  }

  td {
    padding: 5px;
  }

  p {
    color: var(--text-s-color);
    text-wrap: pretty;
  }
</style>
