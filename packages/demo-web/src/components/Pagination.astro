---
import customElements from '../data/componentList.json';
import customCSS from '../data/cssCustomList.json';

const pagination = ['/', '/usage'].concat(
  customElements
    .map((component) => `/components/${component.title}`)
    .concat(customCSS.map((component) => `/css-custom/${component.title}`))
);

const url = new URL(Astro.request.url);
let actualPage = url.pathname;
actualPage.at(-1) === '/' ? (actualPage = actualPage.slice(0, -1)) : actualPage;

const nextPage =
  pagination[pagination.findIndex((item) => item === actualPage) + 1];
const pastPage =
  pagination[pagination.findIndex((item) => item === actualPage) - 1];
---

<div class='pagination'>
  <div class='pagination-item'>
    {
      pastPage && (
        <a
          href={pastPage}
          class='item'
        >
          <svg
            xmlns='http://www.w3.org/2000/svg'
            fill='none'
            viewBox='0 0 24 24'
            stroke-width='1.5'
            stroke='currentColor'
          >
            <path
              stroke-linecap='round'
              stroke-linejoin='round'
              d='M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18'
            />
          </svg>
          {pastPage.split('/').at(-1)}
        </a>
      )
    }
  </div>
  <div>
    {
      nextPage && (
        <a
          href={nextPage}
          class='item'
        >
          {' '}
          {nextPage.split('/').at(-1)}
          <svg
            xmlns='http://www.w3.org/2000/svg'
            fill='none'
            viewBox='0 0 24 24'
            stroke-width='1.5'
            stroke='currentColor'
          >
            <path
              stroke-linecap='round'
              stroke-linejoin='round'
              d='M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3'
            />
          </svg>
        </a>
      )
    }
  </div>
</div>

<style>
  .pagination {
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 100%;

    color: var(--text-color);
  }

  .pagination-item {
  }

  .item {
    border-radius: 5px;
    border: 1px solid var(--text-s-color);

    padding: 5px 10px;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;

    color: inherit;
    text-decoration: none;
  }

  svg {
    width: 20px;
  }
</style>
